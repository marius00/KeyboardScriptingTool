using System;
using System.Collections.Generic;
using InputSimulatorStandard.Native;
using log4net;
using Logitech.Led;

namespace Logitech {
    internal static class KeyMapper {
        private static readonly ILog Logger = LogManager.GetLogger(typeof(KeyMapper));

        private static readonly Dictionary<string, LogitechKeyMapping> _keyMapping = new Dictionary<string, LogitechKeyMapping>() {
            { "ESC", LogitechKeyMapping.ESC },
            { "F1", LogitechKeyMapping.F1 },
            { "F2", LogitechKeyMapping.F2 },
            { "F3", LogitechKeyMapping.F3 },
            { "F4", LogitechKeyMapping.F4 },
            { "F5", LogitechKeyMapping.F5 },
            { "F6", LogitechKeyMapping.F6 },
            { "F7", LogitechKeyMapping.F7 },
            { "F8", LogitechKeyMapping.F8 },
            { "F9", LogitechKeyMapping.F9 },
            { "F10", LogitechKeyMapping.F10 },
            { "F11", LogitechKeyMapping.F11 },
            { "F12", LogitechKeyMapping.F12 },
            { "PRINTSCREEN", LogitechKeyMapping.PRINT_SCREEN },
            { "SCROLL", LogitechKeyMapping.SCROLL_LOCK },
            { "PAUSE,.-", LogitechKeyMapping.PAUSE_BREAK },
            { "TILDE", LogitechKeyMapping.TILDE },
            { "D1", LogitechKeyMapping.ONE },
            { "D2", LogitechKeyMapping.TWO },
            { "D3", LogitechKeyMapping.THREE },
            { "D4", LogitechKeyMapping.FOUR },
            { "D5", LogitechKeyMapping.FIVE },
            { "D6", LogitechKeyMapping.SIX },
            { "D7", LogitechKeyMapping.SEVEN },
            { "D8", LogitechKeyMapping.EIGHT },
            { "D9", LogitechKeyMapping.NINE },
            { "D0", LogitechKeyMapping.ZERO },
            { "1", LogitechKeyMapping.ONE },
            { "2", LogitechKeyMapping.TWO },
            { "3", LogitechKeyMapping.THREE },
            { "4", LogitechKeyMapping.FOUR },
            { "5", LogitechKeyMapping.FIVE },
            { "6", LogitechKeyMapping.SIX },
            { "7", LogitechKeyMapping.SEVEN },
            { "8", LogitechKeyMapping.EIGHT },
            { "9", LogitechKeyMapping.NINE },
            { "0", LogitechKeyMapping.ZERO },
            { "MINUS", LogitechKeyMapping.MINUS },
            { "EQUALS", LogitechKeyMapping.EQUALS },
            { "BACKSPACE", LogitechKeyMapping.BACKSPACE },
            { "INSERT", LogitechKeyMapping.INSERT },
            { "HOME", LogitechKeyMapping.HOME },
            { "PAGE_UP", LogitechKeyMapping.PAGE_UP },
            { "NUMLOCK", LogitechKeyMapping.NUM_LOCK },
            { "DIVIDE", LogitechKeyMapping.NUM_SLASH },
            { "MULTIPLY", LogitechKeyMapping.NUM_ASTERISK },
            { "SUBTRACT", LogitechKeyMapping.NUM_MINUS },
            { "TAB", LogitechKeyMapping.TAB },
            { "Q", LogitechKeyMapping.Q },
            { "W", LogitechKeyMapping.W },
            { "E", LogitechKeyMapping.E },
            { "R", LogitechKeyMapping.R },
            { "T", LogitechKeyMapping.T },
            { "Y", LogitechKeyMapping.Y },
            { "U", LogitechKeyMapping.U },
            { "I", LogitechKeyMapping.I },
            { "O", LogitechKeyMapping.O },
            { "P", LogitechKeyMapping.P },
            { "OPEN_BRACKET", LogitechKeyMapping.OPEN_BRACKET },
            { "CLOSE_BRACKET", LogitechKeyMapping.CLOSE_BRACKET },
            { "BACKSLASH", LogitechKeyMapping.BACKSLASH },
            { "KEYBOARD_DELETE", LogitechKeyMapping.KEYBOARD_DELETE },
            { "END", LogitechKeyMapping.END },
            { "PAGE_DOWN", LogitechKeyMapping.PAGE_DOWN },
            { "NUMPAD7", LogitechKeyMapping.NUM_SEVEN },
            { "NUMPAD8", LogitechKeyMapping.NUM_EIGHT },
            { "NUMPAD9", LogitechKeyMapping.NUM_NINE },
            { "NUMPADPLUS", LogitechKeyMapping.NUM_PLUS },
            { "CAPS_LOCK", LogitechKeyMapping.CAPS_LOCK },
            { "A", LogitechKeyMapping.A },
            { "S", LogitechKeyMapping.S },
            { "D", LogitechKeyMapping.D },
            { "F", LogitechKeyMapping.F },
            { "G", LogitechKeyMapping.G },
            { "H", LogitechKeyMapping.H },
            { "J", LogitechKeyMapping.J },
            { "K", LogitechKeyMapping.K },
            { "L", LogitechKeyMapping.L },
            { "SEMICOLON", LogitechKeyMapping.SEMICOLON },
            { "APOSTROPHE", LogitechKeyMapping.APOSTROPHE },
            { "ENTER", LogitechKeyMapping.ENTER },
            { "NUMPAD4", LogitechKeyMapping.NUM_FOUR },
            { "NUMPAD5", LogitechKeyMapping.NUM_FIVE },
            { "NUMPAD6", LogitechKeyMapping.NUM_SIX },
            { "LEFT_SHIFT", LogitechKeyMapping.LEFT_SHIFT },
            { "Z", LogitechKeyMapping.Z },
            { "X", LogitechKeyMapping.X },
            { "C", LogitechKeyMapping.C },
            { "V", LogitechKeyMapping.V },
            { "B", LogitechKeyMapping.B },
            { "N", LogitechKeyMapping.N },
            { "M", LogitechKeyMapping.M },
            { "COMMA", LogitechKeyMapping.COMMA },
            { "PERIOD", LogitechKeyMapping.PERIOD },
            { "FORWARD_SLASH", LogitechKeyMapping.FORWARD_SLASH },
            { "RIGHT_SHIFT", LogitechKeyMapping.RIGHT_SHIFT },
            { "ARROW_UP", LogitechKeyMapping.ARROW_UP },
            { "NUMPAD1", LogitechKeyMapping.NUM_ONE },
            { "NUMPAD2", LogitechKeyMapping.NUM_TWO },
            { "NUMPAD3", LogitechKeyMapping.NUM_THREE },
            { "NUMPADENTER", LogitechKeyMapping.NUM_ENTER },
            { "LEFT_CONTROL", LogitechKeyMapping.LEFT_CONTROL },
            { "LEFT_WINDOWS", LogitechKeyMapping.LEFT_WINDOWS },
            { "LEFT_ALT", LogitechKeyMapping.LEFT_ALT },
            { "SPACE", LogitechKeyMapping.SPACE },
            { "RIGHT_ALT", LogitechKeyMapping.RIGHT_ALT },
            { "RIGHT_WINDOWS", LogitechKeyMapping.RIGHT_WINDOWS },
            { "APPLICATION_SELECT", LogitechKeyMapping.APPLICATION_SELECT },
            { "RIGHT_CONTROL", LogitechKeyMapping.RIGHT_CONTROL },
            { "ARROW_LEFT", LogitechKeyMapping.ARROW_LEFT },
            { "ARROW_DOWN", LogitechKeyMapping.ARROW_DOWN },
            { "ARROW_RIGHT", LogitechKeyMapping.ARROW_RIGHT },
            { "NUM_ZERO", LogitechKeyMapping.NUM_ZERO },
            { "NUM_PERIOD", LogitechKeyMapping.NUM_PERIOD },
            { "G1", LogitechKeyMapping.G_1 },
            { "G2", LogitechKeyMapping.G_2 },
            { "G3", LogitechKeyMapping.G_3 },
            { "G4", LogitechKeyMapping.G_4 },
            { "G5", LogitechKeyMapping.G_5 },
            { "G6", LogitechKeyMapping.G_6 },
            { "G7", LogitechKeyMapping.G_7 },
            { "G8", LogitechKeyMapping.G_8 },
            { "G9", LogitechKeyMapping.G_9 },
            { "G_LOGO", LogitechKeyMapping.G_LOGO },
            { "G_BADGE", LogitechKeyMapping.G_BADGE },
        };

        private static readonly Dictionary<string, VirtualKeyCode> _virtualKeyCodes = new Dictionary<string, VirtualKeyCode> {
            { "LBUTTON", VirtualKeyCode.LBUTTON },
            { "RBUTTON", VirtualKeyCode.RBUTTON },
            { "CANCEL", VirtualKeyCode.CANCEL },
            { "MBUTTON", VirtualKeyCode.MBUTTON },
            { "XBUTTON1", VirtualKeyCode.XBUTTON1 },
            { "XBUTTON2", VirtualKeyCode.XBUTTON2 },
            { "BACK", VirtualKeyCode.BACK },
            { "TAB", VirtualKeyCode.TAB },
            { "CLEAR", VirtualKeyCode.CLEAR },
            { "RETURN", VirtualKeyCode.RETURN },
            { "SHIFT", VirtualKeyCode.SHIFT },
            { "CONTROL", VirtualKeyCode.CONTROL },
            { "MENU", VirtualKeyCode.MENU },
            { "PAUSE", VirtualKeyCode.PAUSE },
            { "CAPITAL", VirtualKeyCode.CAPITAL },
            { "HANGEUL", VirtualKeyCode.HANGEUL },
            { "HANGUL", VirtualKeyCode.HANGUL },
            { "KANA", VirtualKeyCode.KANA },
            { "JUNJA", VirtualKeyCode.JUNJA },
            { "FINAL", VirtualKeyCode.FINAL },
            { "HANJA", VirtualKeyCode.HANJA },
            { "KANJI", VirtualKeyCode.KANJI },
            { "ESCAPE", VirtualKeyCode.ESCAPE },
            { "CONVERT", VirtualKeyCode.CONVERT },
            { "NONCONVERT", VirtualKeyCode.NONCONVERT },
            { "ACCEPT", VirtualKeyCode.ACCEPT },
            { "MODECHANGE", VirtualKeyCode.MODECHANGE },
            { "SPACE", VirtualKeyCode.SPACE },
            { "PRIOR", VirtualKeyCode.PRIOR },
            { "NEXT", VirtualKeyCode.NEXT },
            { "END", VirtualKeyCode.END },
            { "HOME", VirtualKeyCode.HOME },
            { "LEFT", VirtualKeyCode.LEFT },
            { "UP", VirtualKeyCode.UP },
            { "RIGHT", VirtualKeyCode.RIGHT },
            { "DOWN", VirtualKeyCode.DOWN },
            { "SELECT", VirtualKeyCode.SELECT },
            { "PRINT", VirtualKeyCode.PRINT },
            { "EXECUTE", VirtualKeyCode.EXECUTE },
            { "SNAPSHOT", VirtualKeyCode.SNAPSHOT },
            { "INSERT", VirtualKeyCode.INSERT },
            { "DELETE", VirtualKeyCode.DELETE },
            { "HELP", VirtualKeyCode.HELP },

            { "0", VirtualKeyCode.VK_0 },
            { "1", VirtualKeyCode.VK_1 },
            { "2", VirtualKeyCode.VK_2 },
            { "3", VirtualKeyCode.VK_3 },
            { "4", VirtualKeyCode.VK_4 },
            { "5", VirtualKeyCode.VK_5 },
            { "6", VirtualKeyCode.VK_6 },
            { "7", VirtualKeyCode.VK_7 },
            { "8", VirtualKeyCode.VK_8 },
            { "9", VirtualKeyCode.VK_9 },
            { "A", VirtualKeyCode.VK_A },
            { "B", VirtualKeyCode.VK_B },
            { "C", VirtualKeyCode.VK_C },
            { "D", VirtualKeyCode.VK_D },
            { "E", VirtualKeyCode.VK_E },
            { "F", VirtualKeyCode.VK_F },
            { "G", VirtualKeyCode.VK_G },
            { "H", VirtualKeyCode.VK_H },
            { "I", VirtualKeyCode.VK_I },
            { "J", VirtualKeyCode.VK_J },
            { "K", VirtualKeyCode.VK_K },
            { "L", VirtualKeyCode.VK_L },
            { "M", VirtualKeyCode.VK_M },
            { "N", VirtualKeyCode.VK_N },
            { "O", VirtualKeyCode.VK_O },
            { "P", VirtualKeyCode.VK_P },
            { "Q", VirtualKeyCode.VK_Q },
            { "R", VirtualKeyCode.VK_R },
            { "S", VirtualKeyCode.VK_S },
            { "T", VirtualKeyCode.VK_T },
            { "U", VirtualKeyCode.VK_U },
            { "V", VirtualKeyCode.VK_V },
            { "W", VirtualKeyCode.VK_W },
            { "X", VirtualKeyCode.VK_X },
            { "Y", VirtualKeyCode.VK_Y },
            { "Z", VirtualKeyCode.VK_Z },
            { "LWIN", VirtualKeyCode.LWIN },
            { "RWIN", VirtualKeyCode.RWIN },
            { "APPS", VirtualKeyCode.APPS },
            { "SLEEP", VirtualKeyCode.SLEEP },
            { "NUMPAD0", VirtualKeyCode.NUMPAD0 },
            { "NUMPAD1", VirtualKeyCode.NUMPAD1 },
            { "NUMPAD2", VirtualKeyCode.NUMPAD2 },
            { "NUMPAD3", VirtualKeyCode.NUMPAD3 },
            { "NUMPAD4", VirtualKeyCode.NUMPAD4 },
            { "NUMPAD5", VirtualKeyCode.NUMPAD5 },
            { "NUMPAD6", VirtualKeyCode.NUMPAD6 },
            { "NUMPAD7", VirtualKeyCode.NUMPAD7 },
            { "NUMPAD8", VirtualKeyCode.NUMPAD8 },
            { "NUMPAD9", VirtualKeyCode.NUMPAD9 },
            { "MULTIPLY", VirtualKeyCode.MULTIPLY },
            { "ADD", VirtualKeyCode.ADD },
            { "SEPARATOR", VirtualKeyCode.SEPARATOR },
            { "SUBTRACT", VirtualKeyCode.SUBTRACT },
            { "DECIMAL", VirtualKeyCode.DECIMAL },
            { "DIVIDE", VirtualKeyCode.DIVIDE },
            { "F1", VirtualKeyCode.F1 },
            { "F2", VirtualKeyCode.F2 },
            { "F3", VirtualKeyCode.F3 },
            { "F4", VirtualKeyCode.F4 },
            { "F5", VirtualKeyCode.F5 },
            { "F6", VirtualKeyCode.F6 },
            { "F7", VirtualKeyCode.F7 },
            { "F8", VirtualKeyCode.F8 },
            { "F9", VirtualKeyCode.F9 },
            { "F10", VirtualKeyCode.F10 },
            { "F11", VirtualKeyCode.F11 },
            { "F12", VirtualKeyCode.F12 },
            { "F13", VirtualKeyCode.F13 },
            { "F14", VirtualKeyCode.F14 },
            { "F15", VirtualKeyCode.F15 },
            { "F16", VirtualKeyCode.F16 },
            { "F17", VirtualKeyCode.F17 },
            { "F18", VirtualKeyCode.F18 },
            { "F19", VirtualKeyCode.F19 },
            { "F20", VirtualKeyCode.F20 },
            { "F21", VirtualKeyCode.F21 },
            { "F22", VirtualKeyCode.F22 },
            { "F23", VirtualKeyCode.F23 },
            { "F24", VirtualKeyCode.F24 },
            { "NUMLOCK", VirtualKeyCode.NUMLOCK },
            { "SCROLL", VirtualKeyCode.SCROLL },
            { "LSHIFT", VirtualKeyCode.LSHIFT },
            { "RSHIFT", VirtualKeyCode.RSHIFT },
            { "LCONTROL", VirtualKeyCode.LCONTROL },
            { "RCONTROL", VirtualKeyCode.RCONTROL },
            { "LMENU", VirtualKeyCode.LMENU },
            { "RMENU", VirtualKeyCode.RMENU },
            /*
            { "BROWSER_BACK", VirtualKeyCode.BROWSER_BACK },
            { "BROWSER_FORWARD", VirtualKeyCode.BROWSER_FORWARD },
            { "BROWSER_REFRESH", VirtualKeyCode.BROWSER_REFRESH },
            { "BROWSER_STOP", VirtualKeyCode.BROWSER_STOP },
            { "BROWSER_SEARCH", VirtualKeyCode.BROWSER_SEARCH },
            { "BROWSER_FAVORITES", VirtualKeyCode.BROWSER_FAVORITES },
            { "BROWSER_HOME", VirtualKeyCode.BROWSER_HOME },
            { "VOLUME_MUTE", VirtualKeyCode.VOLUME_MUTE },
            { "VOLUME_DOWN", VirtualKeyCode.VOLUME_DOWN },
            { "VOLUME_UP", VirtualKeyCode.VOLUME_UP },
            { "MEDIA_NEXT_TRACK", VirtualKeyCode.MEDIA_NEXT_TRACK },
            { "MEDIA_PREV_TRACK", VirtualKeyCode.MEDIA_PREV_TRACK },
            { "MEDIA_STOP", VirtualKeyCode.MEDIA_STOP },
            { "MEDIA_PLAY_PAUSE", VirtualKeyCode.MEDIA_PLAY_PAUSE },
            { "LAUNCH_MAIL", VirtualKeyCode.LAUNCH_MAIL },
            { "LAUNCH_MEDIA_SELECT", VirtualKeyCode.LAUNCH_MEDIA_SELECT },
            { "LAUNCH_APP1", VirtualKeyCode.LAUNCH_APP1 },
            { "LAUNCH_APP2", VirtualKeyCode.LAUNCH_APP2 },

            { "OEM_1", VirtualKeyCode.OEM_1 },
            { "OEM_PLUS", VirtualKeyCode.OEM_PLUS },
            { "OEM_COMMA", VirtualKeyCode.OEM_COMMA },
            { "OEM_MINUS", VirtualKeyCode.OEM_MINUS },
            { "OEM_PERIOD", VirtualKeyCode.OEM_PERIOD },
            { "OEM_2", VirtualKeyCode.OEM_2 },
            { "OEM_3", VirtualKeyCode.OEM_3 },
            { "OEM_4", VirtualKeyCode.OEM_4 },
            { "OEM_5", VirtualKeyCode.OEM_5 },
            { "OEM_6", VirtualKeyCode.OEM_6 },
            { "OEM_7", VirtualKeyCode.OEM_7 },
            { "OEM_8", VirtualKeyCode.OEM_8 },
            { "OEM_102", VirtualKeyCode.OEM_102 },
            { "PROCESSKEY", VirtualKeyCode.PROCESSKEY },
            { "PACKET", VirtualKeyCode.PACKET },
            { "ATTN", VirtualKeyCode.ATTN },
            { "CRSEL", VirtualKeyCode.CRSEL },
            { "EXSEL", VirtualKeyCode.EXSEL },
            { "EREOF", VirtualKeyCode.EREOF },
            { "PLAY", VirtualKeyCode.PLAY },
            { "ZOOM", VirtualKeyCode.ZOOM },
            { "NONAME", VirtualKeyCode.NONAME },
            { "PA1", VirtualKeyCode.PA1 },
            { "OEM_CLEAR", VirtualKeyCode.OEM_CLEAR },
            
             */
        };

        private static readonly HashSet<string> _inputKeys = new HashSet<string> {
            "KEYCODE",
            "MODIFIERS",
            "NONE",
            "LBUTTON",
            "RBUTTON",
            "CANCEL",
            "MBUTTON",
            "XBUTTON1",
            "XBUTTON2",
            "BACK",
            "TAB",
            "LINEFEED",
            "CLEAR",
            "RETURN",
            "ENTER",
            "SHIFTKEY",
            "CONTROLKEY",
            "MENU",
            "PAUSE",
            "CAPITAL",
            "CAPSLOCK",
            "KANAMODE",
            "HANGUELMODE",
            "HANGULMODE",
            "JUNJAMODE",
            "FINALMODE",
            "HANJAMODE",
            "KANJIMODE",
            "ESCAPE",
            "IMECONVERT",
            "IMENONCONVERT",
            "IMEACCEPT",
            "IMEACEEPT",
            "IMEMODECHANGE",
            "SPACE",
            "PRIOR",
            "PAGEUP",
            "NEXT",
            "PAGEDOWN",
            "END",
            "HOME",
            "LEFT",
            "UP",
            "RIGHT",
            "DOWN",
            "SELECT",
            "PRINT",
            "EXECUTE",
            "SNAPSHOT",
            "PRINTSCREEN",
            "INSERT",
            "DELETE",
            "HELP",
            "D0",
            "D1",
            "D2",
            "D3",
            "D4",
            "D5",
            "D6",
            "D7",
            "D8",
            "D9",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            "LWIN",
            "RWIN",
            "APPS",
            "SLEEP",
            "NUMPAD0",
            "NUMPAD1",
            "NUMPAD2",
            "NUMPAD3",
            "NUMPAD4",
            "NUMPAD5",
            "NUMPAD6",
            "NUMPAD7",
            "NUMPAD8",
            "NUMPAD9",
            "MULTIPLY",
            "ADD",
            "SEPARATOR",
            "SUBTRACT",
            "DECIMAL",
            "DIVIDE",
            "F1",
            "F2",
            "F3",
            "F4",
            "F5",
            "F6",
            "F7",
            "F8",
            "F9",
            "F10",
            "F11",
            "F12",
            "F13",
            "F14",
            "F15",
            "F16",
            "F17",
            "F18",
            "F19",
            "F20",
            "F21",
            "F22",
            "F23",
            "F24",
            "NUMLOCK",
            "SCROLL",
            "LSHIFTKEY",
            "RSHIFTKEY",
            "LCONTROLKEY",
            "RCONTROLKEY",
            "LMENU",
            "RMENU",
            "BROWSERBACK",
            "BROWSERFORWARD",
            "BROWSERREFRESH",
            "BROWSERSTOP",
            "BROWSERSEARCH",
            "BROWSERFAVORITES",
            "BROWSERHOME",
            "VOLUMEMUTE",
            "VOLUMEDOWN",
            "VOLUMEUP",
            "MEDIANEXTTRACK",
            "MEDIAPREVIOUSTRACK",
            "MEDIASTOP",
            "MEDIAPLAYPAUSE",
            "LAUNCHMAIL",
            "SELECTMEDIA",
            "LAUNCHAPPLICATION1",
            "LAUNCHAPPLICATION2",
            "OEMSEMICOLON",
            "OEM1",
            "OEMPLUS",
            "OEMCOMMA",
            "OEMMINUS",
            "OEMPERIOD",
            "OEMQUESTION",
            "OEM2",
            "OEMTILDE",
            "OEM3",
            "OEMOPENBRACKETS",
            "OEM4",
            "OEMPIPE",
            "OEM5",
            "OEMCLOSEBRACKETS",
            "OEM6",
            "OEMQUOTES",
            "OEM7",
            "OEM8",
            "OEMBACKSLASH",
            "OEM102",
            "PROCESSKEY",
            "PACKET",
            "ATTN",
            "CRSEL",
            "EXSEL",
            "ERASEEOF",
            "PLAY",
            "ZOOM",
            "NONAME",
            "PA1",
            "OEMCLEAR",
            "SHIFT",
            "CONTROL",
            "ALT",
        };

        public static VirtualKeyCode TranslateToKeyCode(string character) {
            if (_virtualKeyCodes.ContainsKey(character.ToUpper())) {
                return _virtualKeyCodes[character.ToUpper()];
            }

            Logger.Warn($"Could not find keycode {character}");
            return VirtualKeyCode.F18;
        }

        public static LogitechKeyMapping TranslateToLogitechMapping(string character) {
            if (_keyMapping.ContainsKey(character.ToUpper())) {
                return _keyMapping[character.ToUpper()];
            }

            Logger.Warn($"Could not find keycode {character}");
            return LogitechKeyMapping.G_LOGO;
        }

        public static bool IsValidLogitechMapping(string character) {
            if (string.IsNullOrEmpty(character)) {
                return false;
            }

            return _keyMapping.ContainsKey(character.ToUpper());
        }

        public static bool IsValidKeyCode(string character) {
            if (string.IsNullOrEmpty(character)) {
                return false;
            }

            return _virtualKeyCodes.ContainsKey(character.ToUpper());
        }

        public static void Validate() {
            foreach (var key in _inputKeys) {
                if (!_keyMapping.ContainsKey(key)) {
                    Console.WriteLine($"{key,-16} missing from Logitech Colors");
                }
            }
        }
    }
}